# Very simple cookbook which demonstrates the use of
# a free surface for computing surface topography.
# The model is 2D, with a rising blob beneath a free
# surface.  We output the maximum and minimum
# topography at every time step.


set Dimension = 3 #2

# Free surface calculations are typically more difficult to keep
# stable than others, so we take a smaller time step
set CFL number                             = 0.5

set End time                               = 1e8
set Output directory                       = output
set Adiabatic surface temperature          = 1600   # this will be the reference temperature for computing the heat flux

# Pressure normalization must be set to ``no'' for free surface
# models, as we assume the pressure is zero at the free surface
set Pressure normalization                 = no
set Use years in output instead of seconds = true


# We let the boundaries be zero temperature, as we are just
# modelling a single rising blob
subsection Boundary temperature model
  set Model name = initial temperature
end

subsection Compositional fields
  set Number of fields = 1
  set Names of fields = lithosphere
end


subsection Discretization
  set Use locally conservative discretization = false
  subsection Stabilization parameters
    set alpha = 2
    set beta  = 0.078
    set cR    = 0.5  
  end
end



# We can use the normal box geometry model
# for free surface modelling, we just need
# to specify further down which surface
# is to be the free one.
subsection Geometry model
  set Model name = box
  subsection Box
    set X extent = 3000.e3 
    set Y extent = 3000.e3 
    set Z extent = 400.e3
    set X repetitions = 15
    set Y repetitions = 15
    set Z repetitions = 2
  end
end


subsection Gravity model
  set Model name = vertical
  subsection Vertical
    set Magnitude = 10.0
  end
end


# Our temperature initial conditions are simply a blob of hot 
# rock in the center of the domain
subsection Initial conditions
  set Model name = adiabatic
  subsection Adiabatic
    set Age bottom boundary layer = 0e0

    # The age of the upper thermal boundary layer, used for the calculation of
    # the half-space cooling model temperature. Units: years if the 'Use years
    # in output instead of seconds' parameter is set; seconds otherwise.
    set Age top boundary layer    = 1e8

    # The amplitude (in K) of the initial spherical temperature perturbation
    # at the bottom of the model domain. This perturbation will be added to
    # the adiabatic temperature profile, but not to the bottom thermal
    # boundary layer. Instead, the maximum of the perturbation and the bottom
    # boundary layer temperature will be used.
    set Amplitude                 = 200

    # Where the initial temperature perturbation should be placed. If 'center'
    # is given, then the perturbation will be centered along a 'midpoint' of
    # some sort of the bottom boundary. For example, in the case of a box
    # geometry, this is the center of the bottom face; in the case of a
    # spherical shell geometry, it is along the inner surface halfway between
    # the bounding radial lines.
    set Position                  = center

    # The Radius (in m) of the initial spherical temperature perturbation at
    # the bottom of the model domain.
    set Radius                    = 50000

    # If this value is larger than 0, the initial temperature profile will not
    # be adiabatic, but subadiabatic. This value gives the maximal deviation
    # from adiabaticity. Set to 0 for an adiabatic temperature profile. Units:
    # K.
    # 
    # The function object in the Function subsection represents the
    # compositional fields that will be used as a reference profile for
    # calculating the thermal diffusivity. This function is one-dimensional
    # and depends only on depth. The format of this functions follows the
    # syntax understood by the muparser library, see
    # Section~\ref{sec:muparser-format}.
    set Subadiabaticity           = 0e0
  end
end

subsection Compositional initial conditions
  set Model name = function
  subsection Function
    set Function expression = if(z>300000,1,0)
    set Variable names      = x,y,z
  end
end

# A fairly standard simple geometry model
subsection Material model
  set Model name = simple #visco plastic

# the old stuff we don't use any more
  subsection Visco Plastic
    set Densities                     = 3300, 2800
    set Heat capacities               = 1250
    set Reference temperature         = 293
    set Thermal expansivities         = 4e-5
    set Viscous flow law              = diffusion
    set Cohesions                     = 1e16
    set Prefactors for diffusion creep = 1.5e-9, 1.5e-11 #this scales with 1/viscosty
    set Grain size                    = 1
    set Maximum viscosity             = 1e26
  end

# the material model we use
  subsection Simple model
    set Reference density             = 3300
    set Reference specific heat       = 1250
    set Reference temperature         = 1600
    set Thermal conductivity          = 1.0         # low thermal conductivity for a sharp blob
    set Thermal expansion coefficient = 4e-5
    set Viscosity                     = 1.e19
    set Min viscosity                 = 1.e17
    set Max viscosity                 = 1.e24
    set Thermal viscosity exponent    = 20
    set Composition viscosity prefactor = 1e10      # additional prefactor for the lithosphere
    set Density differential for compositional field 1 = -600   # density difference for the lithosphere
  end
end

subsection Mesh refinement
  set Additional refinement times        =
  set Initial adaptive refinement        = 2              
  set Initial global refinement          = 1    
  set Refinement fraction                = 0.01
  set Coarsening fraction                = 0.9
  set Strategy                           = minimum refinement function, topography
  set Time steps between mesh refinement = 0  

  subsection Minimum refinement function
    set Coordinate system   = cartesian
    set Function expression = if(x<1200000,1,if(x>1800000,1,if(y<1200000,1,if(y>1800000,1,3))))
    set Variable names      = x,y,z
  end           
end


# Here we specify that the model has fixed temperature
# boundary conditions, as well as free slip boundary
# conditions for the sides and bottom. 
subsection Model settings
  set Include adiabatic heating               = false
  set Include shear heating                   = false
  set Fixed temperature boundary indicators   = bottom, top
  set Prescribed velocity boundary indicators =
  set Tangential velocity boundary indicators = left, right, top
  set Zero velocity boundary indicators       = 

  # We specify a comma delimited list of the free surface boundaries
  # for the model.  In this case, it is just the top boundary
  # of the box geometry model. 
  # set Free surface boundary indicators = top
end

# Here is the major new section to the parameter file,
# specifying the parameter for running free surface
# calculations
subsection Free surface
  # We need to specify the free surface stabilization parameter
  # theta, between zero and one.  If it is zero, there is no stabilization
  # and you are likely to see a sloshing instability develop.  If
  # it is one, the surface should be the most stable, though you
  # may find that the rates that it moves are fairly damped
  set Free surface stabilization theta = 0.5
end

# We also include the topography postprocessor, which just calculates
# the maximum and minimun topography on your free surface at
# every time step.  
subsection Postprocess
  set List of postprocessors = visualization,topography,velocity statistics,dynamic topography, plume heat flux statistics, heat flux statistics
  subsection Visualization
    set Time between graphical output = 0
    set List of output variables      = material properties,dynamic topography, strain rate, nonadiabatic pressure
    set Interpolate output            = true

    subsection Dynamic Topography
      set Subtract mean of dynamic topography = true
    end
  end
end
